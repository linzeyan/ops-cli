run:
  go: "1.18"
  timeout: 3m

linters-settings:
  cyclop:
    max-complexity: 30
    package-average: 10.0

  errcheck:
    check-type-assertions: true

  gocognit:
    min-complexity: 50

  gosec:
    excludes:
      - G204 # Subprocess launched with a potential tainted input or cmd arguments # Use os/exec
      - G505 # Import blocklist: crypto/sha1

  lll:
    line-length: 200

  testpackage:
    allow-packages:
      - cmd
      - main

linters:
  disable-all: true
  enable:
    ## enabled by default

    - deadcode # Finds unused code
    - errcheck # Errcheck is a program for checking for unchecked errors in go programs. These unchecked errors can be critical bugs in some cases
    - gosimple # Linter for Go source code that specializes in simplifying a code
    - govet # Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
    - ineffassign # Detects when assignments to existing variables are not used
    - staticcheck # Staticcheck is a go vet on steroids, applying a ton of static analysis checks
    - structcheck # Finds unused struct fields
    - typecheck # Like the front-end of a Go compiler, parses and type-checks Go code
    - unused # Checks Go code for unused constants, variables, functions and types
    - varcheck # Finds unused global variables and constants

    ## disabled by default

    - asasalint # Check for pass []any as any in variadic func(...any)
    - asciicheck # Simple linter to check that your code does not contain non-ASCII identifiers
    - bidichk # Checks for dangerous unicode character sequences
    - bodyclose # checks whether HTTP response body is closed successfully
    - contextcheck # check the function whether use a non-inherited context
    - cyclop # checks function and package cyclomatic complexity
    - dupl # Tool for code clone detection
    - durationcheck # check for two durations multiplied together
    - errname # Checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error.
    - errorlint # errorlint is a linter for that can be used to find code that will cause problems with the error wrapping scheme introduced in Go 1.13.
    - execinquery # execinquery is a linter about query string checker in Query function which reads your Go src files and warning it finds
    - exhaustive # check exhaustiveness of enum switch statements
    - exportloopref # checks for pointers to enclosing loop variables
    # - forbidigo # Forbids identifiers
    - funlen # Tool for detection of long functions
    # - gochecknoglobals # check that no global variables exist
    # - gochecknoinits # Checks that no init functions are present in Go code
    - gocognit # Computes and checks the cognitive complexity of functions
    - goconst # Finds repeated strings that could be replaced by a constant
    - gocritic # Provides diagnostics that check for bugs, performance and style issues.
    - gocyclo # Computes and checks the cyclomatic complexity of functions
    - godot # Check if comments end in a period
    - goimports # In addition to fixing imports, goimports also formats your code in the same style as gofmt.
    # - gomnd # An analyzer to detect magic numbers.
    - gomoddirectives # Manage the use of 'replace', 'retract', and 'excludes' directives in go.mod.
    - gomodguard # Allow and block list linter for direct Go module dependencies. This is different from depguard where there are different block types for example version constraints and module recommendations.
    - goprintffuncname # Checks that printf-like functions are named with f at the end
    - gosec # Inspects source code for security problems
    - lll # Reports long lines
    - makezero # Finds slice declarations with non-zero initial length
    - nakedret # Finds naked returns in functions greater than a specified function length
    - nestif # Reports deeply nested if statements
    - nilerr # Finds the code that returns nil even if it checks that the error is not nil.
    - nilnil # Checks that there is no simultaneous return of nil error and an invalid value.
    - noctx # noctx finds sending http request without context.Context
    - nolintlint # Reports ill-formed or insufficient nolint directives
    - nonamedreturns # Reports all named returns
    - nosprintfhostport # Checks for misuse of Sprintf to construct a host with port in a URL.
    - predeclared # find code that shadows one of Go's predeclared identifiers
    - promlinter # Check Prometheus metrics naming via promlint
    - revive # Fast, configurable, extensible, flexible, and beautiful linter for Go. Drop-in replacement of golint.
    - rowserrcheck # checks whether Err of rows is checked successfully
    - sqlclosecheck # Checks that sql.Rows and sql.Stmt are closed.
    - stylecheck # Stylecheck is a replacement for golint
    - tenv # tenv is analyzer that detects using os.Setenv instead of t.Setenv since Go1.17
    - testpackage # linter that makes you use a separate _test package
    - tparallel # tparallel detects inappropriate usage of t.Parallel() method in your Go test codes
    - unconvert # Remove unnecessary type conversions
    - unparam # Reports unused function parameters
    - wastedassign # wastedassign finds wasted assignment statements.
    - whitespace # Tool for detection of leading and trailing whitespace

  ## you may want to enable

  #- decorder # check declaration order and count of types, constants, variables and functions
  #- exhaustruct # Checks if all structure fields are initialized
  #- goheader # Checks is file header matches to pattern
  #- ireturn # Accept Interfaces, Return Concrete Types
  #- prealloc # [premature optimization, but can be used in some cases] Finds slice declarations that could potentially be preallocated
  #- varnamelen # [great idea, but too many false positives] checks that the length of a variable's name matches its scope
  #- wrapcheck # Checks that errors returned from external packages are wrapped
  ## disabled
  #- containedctx # containedctx is a linter that detects struct contained context.Context field
  #- depguard # [replaced by gomodguard] Go linter that checks if package imports are in a list of acceptable packages
  #- dogsled # Checks assignments with too many blank identifiers (e.g. x, _, _, _, := f())
  #- errchkjson # [don't see profit + I'm against of omitting errors like in the first example https://github.com/breml/errchkjson] Checks types passed to the json encoding functions. Reports unsupported types and optionally reports occasions, where the check for the returned error can be omitted.
  #- forcetypeassert # [replaced by errcheck] finds forced type assertions
  #- gci # Gci controls golang package import order and makes it always deterministic.
  #- godox # Tool for detection of FIXME, TODO and other comment keywords
  #- goerr113 # [too strict] Golang linter to check the errors handling expressions
  #- gofmt # [replaced by goimports] Gofmt checks whether code was gofmt-ed. By default this tool runs with -s option to check for code simplification
  #- gofumpt # [replaced by goimports, gofumports is not available yet] Gofumpt checks whether code was gofumpt-ed.
  #- grouper # An analyzer to analyze expression groups.
  #- ifshort # Checks that your code uses short syntax for if-statements whenever possible
  #- importas # Enforces consistent import aliases
  #- maintidx # maintidx measures the maintainability index of each function.
  #- misspell # [useless] Finds commonly misspelled English words in comments
  #- nlreturn # [too strict and mostly code is not more readable] nlreturn checks for a new line before return and branch statements to increase code clarity
  #- nosnakecase # Detects snake case of variable naming and function name. # TODO: maybe enable after https://github.com/sivchari/nosnakecase/issues/14
  #- paralleltest # [too many false positives] paralleltest detects missing usage of t.Parallel() method in your Go test
  #- tagliatelle # Checks the struct tags.
  #- thelper # thelper detects golang test helpers without t.Helper() call and checks the consistency of test helpers
  #- wsl # [too strict and mostly code is not more readable] Whitespace Linter - Forces you to use empty lines!
  ## deprecated
  #- exhaustivestruct # [deprecated, replaced by exhaustruct] Checks if all struct's fields are initialized
  #- golint # [deprecated, replaced by revive] Golint differs from gofmt. Gofmt reformats Go source code, whereas golint prints out style mistakes
  #- interfacer # [deprecated] Linter that suggests narrower interface types
  #- maligned # [deprecated, replaced by govet fieldalignment] Tool to detect Go structs that would take less memory if their fields were sorted
  #- scopelint # [deprecated, replaced by exportloopref] Scopelint checks for unpinned variables in go programs

issues:
  max-same-issues: 10
